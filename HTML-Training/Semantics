Founder of HTML/www : Tim Berners Lee

SEO - Search Engine Optimization

Search engine optimization (SEO) is the process of improving the ranking (visibility) of a website in search engines. The higher (or more frequently) a web site is displayed in a search engine list (like Google), the more visitors it is expected to receive.

SEO considers how search engines work, what people search for, and which search terms (words) are typed. Optimizing a website may involve editing the content to increase its relevance to specific keywords. Promoting a site to increase the number of links, is another SEO tactic.

Effective search engine optimization may require changes to the HTML source code of a site and to the site content. SEO tactics should be incorporated into the website development and especially into the menus and navigation structure.

Another class of techniques, known as black hat SEO or spamdexing, uses methods such as link farms, keyword stuffing and article spinning that degrade both the relevance of search results and the quality of user-experience with search engines. Search engines look for sites that employ these techniques in order to remove them from their indices.



HTML5:

 <header>
 element specifies a header for a document or section.Element should be used as a container for introductory content.You can have several <header> elements in one document.

 <footer> - Same as Header

<article> 
element specifies independent, self-contained content.An article should make sense on its own, and it should be possible to read it independently from the rest of the web site.

<section> 
element defines a section in a document.According to W3C's HTML5 documentation: "A section is a thematic grouping of content, typically with a heading".A Web site's home page could be split into sections for introduction, content, and contact information.


<nav>
element defines a set of navigation links.It is intended for large blocks of navigation links. However, not all links in a document should be inside a <nav> element!

<aside> 
element defines some content aside from the content it is placed in (like a sidebar).The aside content should be related to the surrounding content.


Meta tags :
In HTML4 : <meta http-equiv="Content-Type" content="text/html;charset=utf-8">
In HTML5 : <meta charset="utf-8">
character_set :Specifies the character encoding for the HTML document.
				UTF-8 - Character encoding for Unicode
				ISO-8859-1 - Character encoding for the Latin alphabet

In theory, any character encoding can be used, but no browser understands all of them. The more widely a character encoding is used, the better the chance that a browser will understand it.



<section>,<article> and <div> :
The Difference Between <article> <section> and <div>
There is a confusing (lack of) difference in the HTML5 standard, between <article> <section> and <div>.
In the HTML5 standard, the <section> element is defined as a block of related elements.
The <article> element is defined as a complete, self-contained block of related elements.
The <div> element is defined as a block of children elements.


/********************************************************/

Basic HTML5 Semantics Points :

1. Use Correct Document Type --  
   <!DOCTYPE html> | <!doctype html>

2. Use Lower Case Element Names --
Bad:		<SECTION> 
			  <p>This is a paragraph.</p>
			</SECTION>
	---------------
Very Bad:	<Section> 
				<p>This is a paragraph.</p>
			</SECTION>
	---------------
Good:		<section> 
			  <p>This is a paragraph.</p>
			</section>
	---------------

3.Close All HTML Elements
	<nav> 
		<ul>
			<li></li>
		</ul>
	</nav>

4.Close Empty HTML Elements :
	In HTML5, it is optional to close empty elements.
	<meta charset="utf-8">
	or
	<meta charset="utf-8"/>
	Both are allowed.

	Note - The slash (/) is required in XHTML and XML.

5.Use Lower Case Attribute Names :
	
	HTML5 allows mixing uppercase and lowercase letters in attribute names.

	Standard recommend using lowercase attribute names:
		- Mixing uppercase and lowercase names is bad - "<div CLASS=""></div>"
		- Developers are used to using lowercase names - "<div class=""></div>"
		- Lowercase look cleaner	
		- Lowercase are easier to write

6.Quote Attribute Values :
	It is recommend to quoting attribute values:

		- You have to use quotes if the value contains spaces
		- Mixing styles is never good
		- Quoted values are easier to read

	Bad Practice : <table class=table striped>
	Good Practice : <table class="table striped">

7.Image Attributes :
	Tag : <img alt="Bingo" title="Bingo Logo" src="images/dice.png">

	Why to use 'ALT' ?
	- The required alt attribute specifies an alternate text for an image, if the image cannot be displayed. The alt attribute provides alternative information for an image if a user for some reason cannot view it (because of slow connection, an error in the src attribute, or if the user uses a screen reader).
	-Always use the alt attribute with images. It is important when the image cannot be viewed.

	Why to use 'TITLE' ?
	- The title attribute specifies extra information about an element.The information is most often shown as a tooltip text when the mouse moves over the element.

	Always define image size. It reduces flickering because the browser can reserve space for images before they are loaded.
	- <img alt="Bingo" title="Bingo Logo" src="images/dice.png" style="width:128px;height:128px">


8. Spaces and Equal Signs :
	
	Spaces around equal signs is legal:  
			<link rel = "stylesheet" href = "styles.css">

	But space-less is easier to read, and groups entities better together:
			<link rel="stylesheet" href="styles.css">

9.Avoid Long Code Lines :
	- When using an HTML editor, it is inconvenient to scroll right and left to read the HTML code.Try to avoid code lines longer than 80 characters.

10.Blank Lines and Indentation :
   	- Do not add blank lines without a reason.
		- For readability, add blank lines to separate large or logical code blocks.
		- For readability, add 2 spaces of indentation. Do not use TAB.
		- Do not use unnecessary blank lines and indentation. It is not necessary to use blank lines between short and related items. It is not necessary to indent every element:

	Example :
		With unnecessary indentation :
			<p>
			Tokyo is the capital of Japan, the center of the Greater Tokyo Area,
			and the most populous metropolitan area in the world.
			It is the seat of the Japanese government and the Imperial Palace,
			and the home of the Japanese Imperial Family.
			</p>

		With proper indentation :
			<p>Tokyo is the capital of Japan, the center of the Greater Tokyo Area,
			and the most populous metropolitan area in the world.
			It is the seat of the Japanese government and the Imperial Palace,
			and the home of the Japanese Imperial Family.</p>


11. Omitting Tags :

	a. Omitting <html> and <body>?
		- In the HTML5 standard, the <html> tag and the <body> tag can be omitted.

		<!DOCTYPE html>
		<head>
		  <title>Page Title</title>
		</head>
		.
		.
		.

		BUT, standard not recommend omitting the <html> and <body> tags,because <html> element is the document root. It is the recommended place for specifying the page language
		
		<!DOCTYPE html>
		<html lang="en-US">
		.
		.

		Reason !!  Why standard not recommend omitting ?

		- Declaring a language is important for accessibility applications (screen readers) and search engines.
		- Omitting <html> or <body> can crash DOM and XML software.
		- Omitting <body> can produce errors in older browsers (IE9).


	b. Omitting <head>?
		-  the <head> tag can also be omitted.By default, browsers will add all elements before <body>, to a default <head> element.


		NOTE : OMITTING TAGS IS UNFAMILIAR TO WEB DEVELOPERS. IT NEEDS TIME TO BE ESTABLISH AS A GUIDELINE.
	       
	       - Version supports omitting of the tags but as per the W3 Standard will have to keep the tags as per heirarchy.

12. Meta Data :
	- Title :
	    The <title> element is required in HTML5. Make the title as meaningful as possible:
	    <title>HTML5 Syntax and Coding Style</title>

	- Encoding : 
		To ensure proper interpretation, and correct search engine indexing, both the language and the character encoding should be defined as early as possible in a document:

	<!DOCTYPE html>
	<html lang="en-US">
	<head>
	  <meta charset="UTF-8">
	</head>
	.
	.
	.
	
13. HTML Comment :
	HTML :
	-  <!-- Comment -->

	CSS : 
	- /* Comment */

	JS :
	- Multi line comment :
		/*  Comment   */

	-Single Line comment :
	   //  Comment


/*******************************/

Set Font Size With 'em'
To allow users to resize the text (in the browser menu), many developers use em instead of pixels.

The em size unit is recommended by the W3C.

1em is equal to the current font size. The default text size in browsers is 16px. So, the default size of 1em is 16px.

The size can be calculated from pixels to em using this formula: pixels/16em


HTML Graphic Element : 
- Canvas 
- SVG   --   Scalable Vector Graphics
    i.   SVG stands for Scalable Vector Graphics
	ii.  SVG is used to define graphics for the Web
	iii. SVG is a W3C recommendation



-Canvas :
What is HTML Canvas?
- The HTML <canvas> element is used to draw graphics, on the fly, via scripting (usually JavaScript).
- The <canvas> element is only a container for graphics. You must use a script to actually draw the graphics.
- Canvas has several methods for drawing paths, boxes, circles, text, and adding images.
- A canvas is a rectangular area on an HTML page. By default, a canvas has no border and no content.
- Always specify an id attribute (to be referred to in a script), and a width and height attribute to define the size of the canvas.
			<canvas id="myCanvas" width="200" height="100"></canvas>

- To add a border, use the style attribute
			<canvas id="myCanvas" width="200" height="100" style="border:1px solid #000000;"></canvas>

-  
